{"version":3,"sources":["Slot.js","Utils.js","Circle.js","Button.js","App.js","serviceWorker.js","index.js"],"names":["Slot","value","onClick","selected","styles","piece","height","width","backgroundColor","padding","boxSizing","circle","borderRadius","border","boxShadow","style","arraysEqual","a","b","length","i","scoreBoard","boardToScore","checkBoard","score","x","y","z","w","forEach","player","board","won","Circle","display","Button","title","container","color","isRed","cursor","App","initialize","tmpBoard","push","j","generateEmptyBoard","setBoard","setTurn","setRecentMove","useState","turn","console","log","recentMove","waiting","setWaiting","hinting","setHinting","difficulty","setDifficulty","waitingRef","useRef","useEffect","copy","deepCopy","c","minimax","move","executeMove","getRow","current","isNaN","rowToPlace","setTimeout","tempBoard","doHint","boardStyle","flexWrap","buttonHolder","header","justifyContent","alignItems","difficultyHolder","column","prevBoard","testTurn","row","arr","JSON","parse","stringify","givenSituation","depth","boardScore","endScore","possibleMoves","allMoves","Math","abs","newVar","moveDone","executedMove","m","randomIndex","floor","random","k","endMove","map","element","index","rowIndex","currentPiece","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d2b5b287.chunk.js","sourcesContent":["import React from \"react\";\n\n//0=empty 1=red 2=black\nexport function Slot({ value, onClick, selected }) {\n  const styles = {\n    piece: {\n      height: 80,\n      width: `${100 / 7}%`,\n      backgroundColor: \"yellow\",\n      padding: 12,\n      boxSizing: \"border-box\",\n    },\n    circle: {\n      height: 60,\n      width: 60,\n      borderRadius: 40,\n      border: `3px solid ${selected ? \"#00FF00\" : \"yellow\"}`,\n      boxShadow: 'inset 1px 2px 3px #000000'\n    },\n  };\n\n  return (\n    <div\n      style={{\n        ...styles.piece,\n      }}\n      onClick={onClick}\n    >\n      <div\n        style={{\n          ...styles.circle,\n\n          backgroundColor: !value\n            ? \"#ffffff\"\n            : value === 1\n            ? \"#ff0000\"\n            : \"#000000\",\n        }}\n      ></div>\n    </div>\n  );\n}\n","export function arraysEqual(a, b) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  if (a.length !== b.length) return false;\n\n  // If you don't care about the order of the elements inside\n  // the array, you should sort both arrays here.\n  // Please note that calling sort on an array will modify that array.\n  // you might want to clone your array first.\n\n  for (var i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n\nexport function scoreBoard(boardToScore) {\n  if (checkBoard(boardToScore) === 1) {\n    return 10000;\n  }\n  if (checkBoard(boardToScore) === 2) {\n    return -10000;\n  }\n\n  let score = 0;\n  for (let x = 0; x < boardToScore.length; x++) {\n    for (let y = 0; y < boardToScore[0].length; y++) {\n      for (let z = -1; z < 2; z++) {\n        for (let w = -1; w < 2; w++) {\n          [1, 2].forEach((player) => {\n            if (\n              boardToScore[x] + 1 &&\n              boardToScore[x][y] + 1 &&\n              boardToScore[x + w] + 1 &&\n              boardToScore[x + w][y + z] + 1 &&\n              boardToScore[x + 2 * w] + 1 &&\n              boardToScore[x + 2 * w][y + 2 * z] + 1 &&\n              boardToScore[x + 3 * w] + 1 &&\n              boardToScore[x + 3 * w][y + 3 * z] + 1 &&\n              (arraysEqual(\n                [\n                  boardToScore[x][y],\n                  boardToScore[x + w][y + z],\n                  boardToScore[x + 2 * w][y + 2 * z],\n                  boardToScore[x + 3 * w][y + 3 * z],\n                ],\n                [0, player, player, player]\n              ) ||\n                arraysEqual(\n                  [\n                    boardToScore[x][y],\n                    boardToScore[x + w][y + z],\n                    boardToScore[x + 2 * w][y + 2 * z],\n                    boardToScore[x + 3 * w][y + 3 * z],\n                  ],\n                  [player, 0, player, player]\n                ))\n            ) {\n              player === 1 ? (score += 1.5) : score--;\n            }\n          });\n        }\n      }\n    }\n  }\n  return score;\n}\n\nexport function checkBoard(board) {\n  let won = 0;\n  for (let x = 0; x < board.length; x++) {\n    for (let y = 0; y < board[0].length; y++) {\n      for (let z = 1; z < 3; z++) {\n        if (\n          x > 2 &&\n          y < board[0].length - 3 &&\n          arraysEqual(\n            [\n              board[x][y],\n              board[x - 1][y + 1],\n              board[x - 2][y + 2],\n              board[x - 3][y + 3],\n            ],\n            [z, z, z, z]\n          )\n        ) {\n          won = z;\n        }\n\n        if (\n          y < board[0].length - 3 &&\n          arraysEqual(\n            [board[x][y], board[x][y + 1], board[x][y + 2], board[x][y + 3]],\n            [z, z, z, z]\n          )\n        ) {\n          won = z;\n        }\n\n        if (\n          x > 2 &&\n          arraysEqual(\n            [board[x][y], board[x - 1][y], board[x - 2][y], board[x - 3][y]],\n            [z, z, z, z]\n          )\n        ) {\n          won = z;\n        }\n        if (\n          y < board[0].length - 3 &&\n          x < board.length - 3 &&\n          arraysEqual(\n            [\n              board[x][y],\n              board[x + 1][y + 1],\n              board[x + 2][y + 2],\n              board[x + 3][y + 3],\n            ],\n            [z, z, z, z]\n          )\n        ) {\n          won = z;\n        }\n      }\n    }\n  }\n  return won;\n}\n","import React from \"react\";\n\nexport function Circle({ value }) {\n  const styles = {\n    circle: {\n      height: 20,\n      width: 20,\n      borderRadius: 40,\n      backgroundColor: value === 1 ? \"#FF0000\" : \"#000000\",\n      display: 'inline-block'\n    },\n  };\n  return <div style={styles.circle} />;\n}\n","import React from \"react\";\n\nexport function Button({title, onClick,isRed}) {\n  const styles = {\n    container:{\n      color: '#FFFFFF' ,\n      backgroundColor: isRed?'#FF0000':'#0000FF',\n      display: 'inline-block',\n      padding: 4 ,\n      cursor: 'pointer',\n      borderRadius:4\n    }\n  }\n  return <div style={styles.container} onClick={onClick}>{title}</div>;\n\n}","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport { Slot } from \"./Slot\";\nimport { checkBoard, scoreBoard } from \"./Utils\";\nimport { Circle } from \"./Circle\";\nimport { Button } from \"./Button\";\n\nfunction App() {\n  function generateEmptyBoard() {\n    let tmpBoard = [];\n    for (let i = 0; i < 6; i++) {\n      tmpBoard.push([]);\n      for (let j = 0; j < 7; j++) {\n        tmpBoard[i].push(0);\n      }\n    }\n    return tmpBoard;\n  }\n\n  function initialize() {\n    const tmpBoard = generateEmptyBoard();\n    setBoard(tmpBoard);\n    setTurn(1);\n    setRecentMove(null);\n  }\n\n  const [turn, setTurn] = useState(1);\n  const [board, setBoard] = useState([]);\n  console.log(\"board\", board);\n  const [recentMove, setRecentMove] = useState(null);\n  const [waiting, setWaiting] = useState(false);\n  const [hinting, setHinting] = useState(false);\n  const [difficulty, setDifficulty] = useState(1);\n  const waitingRef = useRef(false);\n  useEffect(() => initialize(), []);\n\n  useEffect(() => {\n    if (waiting && board) {\n      console.log(\"doing work\");\n      const copy = deepCopy(board);\n      if (!checkBoard(board)) {\n        const c = nextMove(board, 2);\n        setBoard(executeMove(c, copy, 2));\n        setTurn(1);\n        setRecentMove([getRow(c, board), c]);\n      }\n      setWaiting(false);\n      waitingRef.current = false;\n    }\n  }, [waiting]);\n\n  useEffect(() => {\n    const doHint = () => {\n      if (hinting) {\n        const move = minimax(board, 4, 4, -10000, 10000)?.move;\n        if (!isNaN(move)) {\n          const rowToPlace = getRow(move, board);\n          setTimeout(() => {\n            if (isNaN(move) || move === null) return;\n            console.log(\"move\", move);\n            let tempBoard = deepCopy(board);\n            tempBoard[rowToPlace][move] = turn;\n            setBoard(tempBoard);\n            setTurn(turn === 1 ? 2 : 1);\n            setRecentMove([rowToPlace, move]);\n            setWaiting(true);\n\n            setTimeout(() => setHinting(true), 100);\n          }, 50);\n        }\n\n        setHinting(false);\n      }\n    };\n\n    doHint();\n  }, [hinting, board]);\n\n  const styles = {\n    boardStyle: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      width: 648,\n    },\n    buttonHolder: {\n      padding: 4,\n    },\n    header: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      width: 648,\n    },\n    difficultyHolder: {\n      display: \"flex\",\n    },\n  };\n\n  function executeMove(column, prevBoard, testTurn) {\n    const row = getRow(column, prevBoard);\n    if (!isNaN(row)) {\n      let tempBoard = deepCopy(prevBoard);\n      tempBoard[getRow(column, prevBoard)][column] = testTurn;\n      return tempBoard;\n    }\n  }\n\n  function getRow(column, prevBoard) {\n    for (let rowToPlace = prevBoard.length - 1; rowToPlace >= 0; rowToPlace--) {\n      if (prevBoard[rowToPlace][column] === 0) {\n        return rowToPlace;\n      }\n    }\n  }\n\n  function deepCopy(arr) {\n    return JSON.parse(JSON.stringify(arr));\n  }\n\n  function minimax(givenSituation, depth, player, a, b) {\n    if (givenSituation) {\n      const boardScore = scoreBoard(givenSituation);\n      let endScore = 0;\n      let possibleMoves = [];\n      let allMoves = [];\n\n      if (Math.abs(boardScore) < 10000) {\n        if (depth === 0) {\n          let newVar = { score: scoreBoard(givenSituation), move: null };\n          console.log(\"final!\", newVar);\n          return newVar;\n        }\n        if (player === 2) {\n          endScore = b;\n          let moveDone = 0;\n          for (let move = 0; move < 7; move++) {\n            const executedMove = executeMove(move, givenSituation, 2);\n            if (executedMove) {\n              let m = minimax(executedMove, depth - 1, 1, a, b)?.score;\n              if (m < endScore) {\n                endScore = m;\n                b = endScore;\n                moveDone = move;\n              }\n              if (m === 0) {\n                possibleMoves.push({ move, score: m });\n              }\n\n              allMoves.push({ move, score: m });\n\n              if (a >= b) {\n                return { score: b, move: move };\n              }\n            }\n          }\n          console.log(`player ${player} score: ${endScore}`);\n          if (executeMove(moveDone, givenSituation, player)) {\n            return { score: endScore, move: moveDone };\n          }\n        }\n        if (player === 1) {\n          endScore = a;\n          let moveDone = 0;\n          for (let move = 0; move < 7; move++) {\n            const executedMove = executeMove(move, givenSituation, player);\n            if (executedMove) {\n              let mObj = minimax(\n                executedMove,\n                depth - 1,\n                (player % 2) + 1,\n                a,\n                b\n              );\n              const m = mObj.score;\n              if (m > endScore) {\n                endScore = m;\n                a = endScore;\n                moveDone = move;\n              }\n\n              if (m === 0) {\n                possibleMoves.push({ move, score: m });\n              }\n\n              allMoves.push({ move, score: m });\n\n              if (a >= b) {\n                return { score: a, move: move }; // ?? why not movedone\n              }\n            }\n          }\n          console.log(`player ${player} score: ${endScore}`);\n\n          if (executeMove(moveDone, givenSituation, player)) {\n            return { score: endScore, move: moveDone };\n          }\n        }\n      } else {\n        if (boardScore === 10000) {\n          return { score: 10000, move: null };\n        }\n        if (boardScore === -10000) {\n          return { score: -10000, move: null };\n        }\n      }\n\n      const randomIndex = Math.floor(Math.random() * possibleMoves.length);\n      if (!possibleMoves.length) {\n        for (let k = 0; k < 7; k++) {\n          if (executeMove(k, givenSituation, player)) {\n            return { score: 0, move: k };\n          }\n        }\n      }\n      const endMove = possibleMoves[randomIndex]?.move;\n      console.log(\"rando\", allMoves);\n      return { score: endScore, move: endMove };\n    }\n  }\n\n  function nextMove(currentBoard, player) {\n    return minimax(currentBoard, difficulty + 3, player, -10000, 10000).move;\n  }\n\n  const won = board ? checkBoard(board) : 0;\n\n  return (\n    <div>\n      <div style={styles.header}>\n        <div style={styles.difficultyHolder}>\n          {[\"Easy\", \"Medium\", \"Hard\"].map((element, index) => (\n            <div style={styles.buttonHolder}>\n              <Button\n                title={element}\n                onClick={() => setDifficulty(index)}\n                isRed={index === difficulty}\n              />\n            </div>\n          ))}\n        </div>\n        <div>\n          {turn===2 ? (\n            <div>Computer is thinking</div>\n          ) : (\n            <div>\n              <Circle value={turn} /> 's turn\n            </div>\n          )}\n        </div>\n        <div>\n          <Button\n            title={\"Restart\"}\n            onClick={() => {\n              initialize();\n              console.log(\n                \"score\",\n                scoreBoard([\n                  [0, 0, 0, 0, 0, 0, 0],\n                  [0, 0, 0, 0, 0, 0, 0],\n                  [0, 0, 0, 0, 0, 0, 0],\n                  [0, 0, 0, 0, 0, 0, 0],\n                  [2, 0, 0, 0, 0, 0, 0],\n                  [2, 2, 0, 1, 1, 2, 1],\n                ])\n              );\n            }}\n          />\n          <Button title={\"Hint\"} onClick={() => setHinting(true)} />\n        </div>\n      </div>\n\n      {won ? (\n        <div> player {won === 1 ? \"red\" : \"black\"} has won the game </div>\n      ) : null}\n      <div style={styles.boardStyle}>\n        {board.map((row, rowIndex) =>\n          row.map((currentPiece, index) => (\n            <Slot\n              value={currentPiece}\n              onClick={() => {\n                const rowToPlace = getRow(index, board);\n                console.log(\"waiting\", waitingRef.current);\n                if (!won && !waitingRef.current) {\n                  waitingRef.current = true;\n\n                  let tempBoard = deepCopy(board);\n                  tempBoard[rowToPlace][index] = turn;\n                  setBoard(tempBoard);\n                  setTurn(turn === 1 ? 2 : 1);\n                  setRecentMove([rowToPlace, index]);\n\n                  setTimeout(() => setWaiting(true), 100);\n                }\n              }}\n              selected={\n                recentMove &&\n                recentMove[0] === rowIndex &&\n                recentMove[1] === index\n              }\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}